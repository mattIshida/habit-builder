c
user
user.valid?
c
user
c
info
info.id
id.id
id
id = userInfo.get_userinfo_v2
userInfo.get_userinfo_v2.id
userInfo.get_userinfo_v2
info
c
payload
payload.sub
calendar.get_calendar('primary')
c
calendar.get_calendar('primary')
c
payload
c
calendar.get_calendar('primary')
c
payload
c
client.access_token
client.id_token
client
session[:credentials]
request
requiest
params
c
ENV['GOOGLE_CLIENT_ID']
ENV['GOOGLE_CLIENT_SECRET']
c
ENV["GOOGLE_CLIENT_ID"]
ENV
c
data['items'].first['id']
data['items']['id']
data['items']
c
exit
        feed = [intentions, attempts, tips].flatten.compact
feed = [intentions, attempts, tips].flatten
[1,2,3].concat([])
[].concat(attempts)
feed
tips
attempts
attempts = Attempt.where(user_id: ids).order(created_at: :desc).map{|item| {type: "attempt", content: item, reader: feed_users[item[:user_id]]}}
Attempt.where(user_id: ids).order(created_at: :desc)
feed_users[132]
feed_users[131]
feed_users.length
attempts
intentions
feed
feed_users
c
params
c
params
c
params
c
params[:success]
params
c
params
c
ENV["PUBLISHABLE_KEY"]
ENV["WEBHOOK_SECRET"]
ENV['WEBHOOK_SECRET']
c
payment_intent
exit
